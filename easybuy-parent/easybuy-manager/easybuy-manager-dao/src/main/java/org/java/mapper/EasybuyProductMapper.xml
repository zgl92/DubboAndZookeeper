<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.java.mapper.EasybuyProductMapper" >
  <resultMap id="BaseResultMap" type="org.java.pojo.EasybuyProduct" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="categoryLevel1Id" property="categorylevel1id" jdbcType="INTEGER" />
    <result column="categoryLevel2Id" property="categorylevel2id" jdbcType="INTEGER" />
    <result column="categoryLevel3Id" property="categorylevel3id" jdbcType="INTEGER" />
    <result column="fileName" property="filename" jdbcType="VARCHAR" />
    <result column="isDelete" property="isdelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, description, price, stock, categoryLevel1Id, categoryLevel2Id, categoryLevel3Id, 
    fileName, isDelete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.java.pojo.EasybuyProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from easybuy_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from easybuy_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from easybuy_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.java.pojo.EasybuyProductExample" >
    delete from easybuy_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.java.pojo.EasybuyProduct" >
    insert into easybuy_product (id, name, description, 
      price, stock, categoryLevel1Id, 
      categoryLevel2Id, categoryLevel3Id, fileName, 
      isDelete)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{price,jdbcType=REAL}, #{stock,jdbcType=INTEGER}, #{categorylevel1id,jdbcType=INTEGER}, 
      #{categorylevel2id,jdbcType=INTEGER}, #{categorylevel3id,jdbcType=INTEGER}, #{filename,jdbcType=VARCHAR}, 
      #{isdelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.java.pojo.EasybuyProduct" >
    insert into easybuy_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="categorylevel1id != null" >
        categoryLevel1Id,
      </if>
      <if test="categorylevel2id != null" >
        categoryLevel2Id,
      </if>
      <if test="categorylevel3id != null" >
        categoryLevel3Id,
      </if>
      <if test="filename != null" >
        fileName,
      </if>
      <if test="isdelete != null" >
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="categorylevel1id != null" >
        #{categorylevel1id,jdbcType=INTEGER},
      </if>
      <if test="categorylevel2id != null" >
        #{categorylevel2id,jdbcType=INTEGER},
      </if>
      <if test="categorylevel3id != null" >
        #{categorylevel3id,jdbcType=INTEGER},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.java.pojo.EasybuyProductExample" resultType="java.lang.Integer" >
    select count(*) from easybuy_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update easybuy_product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.categorylevel1id != null" >
        categoryLevel1Id = #{record.categorylevel1id,jdbcType=INTEGER},
      </if>
      <if test="record.categorylevel2id != null" >
        categoryLevel2Id = #{record.categorylevel2id,jdbcType=INTEGER},
      </if>
      <if test="record.categorylevel3id != null" >
        categoryLevel3Id = #{record.categorylevel3id,jdbcType=INTEGER},
      </if>
      <if test="record.filename != null" >
        fileName = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null" >
        isDelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update easybuy_product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      stock = #{record.stock,jdbcType=INTEGER},
      categoryLevel1Id = #{record.categorylevel1id,jdbcType=INTEGER},
      categoryLevel2Id = #{record.categorylevel2id,jdbcType=INTEGER},
      categoryLevel3Id = #{record.categorylevel3id,jdbcType=INTEGER},
      fileName = #{record.filename,jdbcType=VARCHAR},
      isDelete = #{record.isdelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.java.pojo.EasybuyProduct" >
    update easybuy_product
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="categorylevel1id != null" >
        categoryLevel1Id = #{categorylevel1id,jdbcType=INTEGER},
      </if>
      <if test="categorylevel2id != null" >
        categoryLevel2Id = #{categorylevel2id,jdbcType=INTEGER},
      </if>
      <if test="categorylevel3id != null" >
        categoryLevel3Id = #{categorylevel3id,jdbcType=INTEGER},
      </if>
      <if test="filename != null" >
        fileName = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.java.pojo.EasybuyProduct" >
    update easybuy_product
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      stock = #{stock,jdbcType=INTEGER},
      categoryLevel1Id = #{categorylevel1id,jdbcType=INTEGER},
      categoryLevel2Id = #{categorylevel2id,jdbcType=INTEGER},
      categoryLevel3Id = #{categorylevel3id,jdbcType=INTEGER},
      fileName = #{filename,jdbcType=VARCHAR},
      isDelete = #{isdelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>